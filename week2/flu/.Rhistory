x=c(-2;2;3)
x=c(-2,2,3)
y=c(-4,-3,-8)
model=lm(x,y)
?lm
df = data.frame(x,y)
model(df~x)
lm(df~x)
lm(y~x)
A = matrix(c(6,2,2,3),nrow=2,ncol=2)
A
solve(A)
3/14
-1/7
3/7
library("lubridate") # работа с датами
library("zoo") # временные ряды
library("xts") # еще ряды
library("dplyr") # манипуляции с данными
library("ggplot2") # графики
library("forecast")
library("quantmod") # загрузка с finance.google.com
library("sophisthse") # загрузка с sophist.hse.ru
install.packages(c("forecast", "quantmod"))
library("forecast")
library("quantmod") # загрузка с finance.google.com
set.seed(40)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(30)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(10)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(20)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(10)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(30)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(40)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(10)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(20)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
library("memisc")
library("dplyr")
library("psych")
library("lmtest")
library("sjPlot")
library("sgof")
library("ggplot2")
library("foreign")
library("car")
library("hexbin")
z <- rnorm(100, mean=5, sd=3)
z <- rnorm(100, mean=5, sd=3)
qplot(z)
x <- seq(-10, 15, by=0.5)
y <- dnorm(x,mean=5,sd=3)
qplot(x,y)
qplot(x,y,geom="line")
pnorm(3, mean=5, sd=3)
pnorm(9, mean=5, sd=3) - pnorm(4, mean=5, sd=3)
qnorm(0.7, mean=5,sd=3)
h <- swiss
glimpse(h)
model <- lm(data=h, Fertility~Catholic+Agriculture+Examination)
summary(model)
coeftest(model)
confint(model)
spj.lm(model)
sjp.lm(model)
model_aux <- lm(data=h, Fertility~Catholic +
I(Catholic+Agriculture) +
Examination)
summary(model_aux)
linearHypothesis(model, "Catholic~Agriculture=0")
linearHypothesis(model, "Catholic-Agriculture=0")
setwd("D:/Work/courses/alaytics_edge/week2")
wine = read.csv("wine.csv")
str(wine)
summary(wine)
model1 = lm(Price ~ AGST, data=wine)
summary(model1)
model1$residuals
SSE = sum(model1$residuals)
SSE
SSE = sum(model1$residuals^2)
SSE
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)
SSE = sum(model2$residuals^2)
SSE
model3 = lm(Price ~ AGST + HarvestRain + WinterRain +
Age + FrancePop, data=wine)
summary(model3)
SSE = sum(model3$residuals^2)
SSE
model4 = lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model4)
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
cor(wine$WinterRain, wine$HarvestRain)
wineTest = read.csv("wine_test.csv")
str(wineTest)
model4 = lm(Price ~ AGST + HarvestRain + WinterRain + Age, data=wine)
summary(model4)
preictTest = predict(model4, newdata=wineTest)
preictTest
predictTest = predict(model4, newdata=wineTest)
predictTest
SSE = sum(wineTest$Price - predictTest)^2)
SST = sum(wineTest$Price - mean(wine$Price))^2)
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
baseball = read.csv("baseball.csv")
str(baseball)
moneyball = subset(baseball, Year < 2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
str(moneyball)
plot(moneyball$RD, moneyball$W)
WinsReg = lm(W~RD, data=moneyball)
summary(WinsReg)
80.881375 + 0.105766*(713-614)
str(moneyball)
RunsReg = lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
RunsReg = lm(RS ~ OBP + SLG, data=moneyball)
summary(RunsReg)
-804.63+2737.77*0.311 + 1584.91*0.405
RunsReg = lm(RA ~ OBP + SLG, data=moneyball)
summary(RunsReg)
206.02 + -58.02*0.297 + 1323.34*0.370
RunsReg = lm(RA ~ OOBP + OSLG, data=moneyball)
summary(RunsReg)
-837.38+2913.60*0.297 + 1514.29*0.370
RunsReg = lm(RS ~ OBP + SLG, data=moneyball)
summary(RunsReg)
RunsReg.coeff
RunsReg
coefficients(RunsReg)
coefficients(RunsReg) * c(1, 0.338, 0.540)
x=0.338
y=0.540
-804.63+2737.77*x + 1584.91*y
x=0.391
y=0.450
-804.63+2737.77*x + 1584.91*y
x=0.369
y=0.374
-804.63+2737.77*x + 1584.91*y
x=0.313
y=0.447
-804.63+2737.77*x + 1584.91*y
x=0.361
y=0.500
-804.63+2737.77*x + 1584.91*y
x=0.338
y=0.540
-804.63+2737.77*x + 1584.91*y
x=0.391
y=0.450
-804.63+2737.77*x + 1584.91*y
x=0.369
y=0.374
-804.63+2737.77*x + 1584.91*y
x=0.313
y=0.447
-804.63+2737.77*x + 1584.91*y
x=0.361
y=0.500
-804.63+2737.77*x + 1584.91*y
x=0.338
y=0.540
-804.63+2737.77*x + 1584.91*y
x=0.391
y=0.450
-804.63+2737.77*x + 1584.91*y
x=0.369
y=0.374
-804.63+2737.77*x + 1584.91*y
x=0.313
y=0.447
-804.63+2737.77*x + 1584.91*y
x=0.361
y=0.500
-804.63+2737.77*x + 1584.91*y
teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012 = c(94,88,95,88,93,94,98,97,93,94)
wins2013 = c(97,97,92,93,92,96,94,96,92,90)
cor(teamRank, wins2012)
cor(teamRank, wins2013)
cwd("climate_change/")
cd("climate_change/")
setwd("D:/Work/courses/alaytics_edge/week2/climate_change")
data = read.csv("climate_change.csv")
str(data)
train = subset(data, Year <= 2006)
test = subset(data, Year > 2006)
CFC.12 + TSI, data = train)
CFC.12 + TSI, data=train)
model1 = lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 +
CFC.12 + TSI, data=train)
model1 = lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 +
CFC.12 + TSI + Aerosols, data=train)
summary(model1)
cor(train)
model2 = lm(Temp ~ MEI + N2O + TSI + Aerosols, data=train)
summary(model2)
model3 = step(model1)
summary(model3)
predicts = predict(model3, test)
summary(predicts)
predicts
SSE = sum((test$Temp - predicts)^2)
SST = sum((test$Temp - mean(test$Temp))^2)
1 - SSE/SST
SSE = sum((test$Temp - predicts)^2)
SST = sum((test$Temp - mean(train$Temp))^2)
1 - SSE/SST
setwd("D:/Work/courses/alaytics_edge/week2/pisa")
train = read.csv("pisa2009train.csv")
test = read.csv("pisa2009test.csv")
pisaTrain = read.csv("pisa2009train.csv")
pisaTest = read.csv("pisa2009test.csv")
str(pisaTrain)
tapply(pisaTrain.readingScore, pisaTrain.male, mean)
tapply(pisaTrain$readingScore, pisaTrain$male, mean)
summary(pisaTrain)
pisaTest = na.omit(pisaTest)
pisaTrain = na.omit(pisaTrain)
str(pisaTrain)
str(pisaTest)
pisaTrain$raceeth = relevel(pisaTrain$raceeth, "White")
pisaTest$raceeth = relevel(pisaTest$raceeth, "White")
model1 = lm(readingScore ~ ., data=pisaTrain)
summary(model1)
predicts = predict(model1, pisaTrain)
rmse = sqrt(mean((pisaTrain$readingScore - predicts)^2))
rmse
29.542707*2
predicts2 = predict(model1, pisaTest)
summary(predicts2)
637.7 - 353.2
SSE = sum((pisaTest$readingScore - predicts2)^2)
SSE
rmse = sqrt(mean((pisaTest$readingScore - predicts2)^2))
rmse
mean(pisaTrain$readingScore)
SST = sum((pisaTest$readingScore - mean(pisaTrain$readingScore))^2)
SST
1 - SSE/SST
setwd("D:/Work/courses/alaytics_edge/week2/flu")
FluTrain = read.csv("FluTrain.csv")
str(FluTrain)
summary(FluTrain)
summary(FluTrain$Week)
max(FluTrain$Week)
tail(FluTrain$Week)
which.max(FluTrain$ILI)
FluTrain[303]
FluTrain[303,]
FluTrain[which.max(FluTrain$Queries),]
hist(FluTrain$ILI)
hist(FluTrain$ILI)
hist(log(FluTrain$ILI))
plot(log(FluTrain$ILI)~FluTrain$Queries)
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain))
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
cor(log(FluTrain$ILI), FluTrain$Queries)
cr = cor(log(FluTrain$ILI), FluTrain$Queries)
cr^2
FluTest = read.csv("FluTest.csv")
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
which(FluTest$Week)
str(FluTest$Week)
which(FluTest$Week == '2012-03-11 - 2012-03-18')
which(FluTest$Week == '2012-03-10 - 2012-03-17')
which(FluTest$Week == '2012-03-09 - 2012-03-16')
which(FluTest$Week == '2012-03-08 - 2012-03-15')
which(FluTest$Week == '2012-03-07 - 2012-03-14')
which(FluTest$Week == '2012-03-06 - 2012-03-13')
which(FluTest$Week == '2012-03-05 - 2012-03-12')
which(FluTest$Week == '2012-03-04 - 2012-03-11')
FluTest$Week
FluTest$Week[11,]
FluTest$Week[11]
PredTest1[11]
(FluTest$ILI[11] - PredTest1[11])/FluTest$ILI[11]
rmse = sqrt(mean((FluTest$ILI - PredTest1)^2))
rmse
install.packages("zoo")
library(zoo)
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
plot(log(FluTrain$ILI) ~ log(ILILag2))
FluTrend2 = FluTrend1 = lm(log(ILI) ~ Queries + ILILag2, data=FluTrain)
summary(FluTrend2)
FluTrend2 = FluTrend1 = lm(log(ILI) ~ Queries + log(ILILag2), data=FluTrain)
summary(FluTrend2)
ILILag2Test = lag(zoo(FluTest$ILI), -2, na.pad=TRUE)
FluTest$ILILag2 = coredata(ILILag2Test)
summary(FluTest)
nrow(FluTrain)
FluTest$ILILag2[1] = FluTrain$ILI[416]
FluTest$ILILag2[2] = FluTrain$ILI[417]
FluTest$ILILag2[1]
FluTest$ILILag2[2]
PredTest2 = exp(predict(FluTrend2, newdata=FluTest))
rmse = sqrt(mean((FluTest$ILI - PredTest2)^2))
rmse
